async ${targetObjName}(obj, args, context, ast) {
  if (obj.${targetObjName}) {
    return cleanUpResult(obj.${targetObjName});
  }

  let db = await context.__mongodb;
  let pipeline = [
    {
      $match: {
        _id: obj._id
      }
    },
    {
      $lookup: {
        from: "${table}",
        let: { ${fkField}: "$${fkField}" },
        pipeline: [
          {
            $match: {
              $expr: { $eq: ["$${keyField}", "$$${fkField}"] }
            }
          },
          {
            $project: ${JSON.stringify($project)}
          },
          {
            $limit: 1
          }
        ],
        as: "${targetObjName}"
      }
    },
    {
      $project: {
        ${targetObjName}: { $arrayElemAt: ["$${targetObjName}", 0] }
      }
    }
  ];

  let results = await db.collection("${sourceTable}").aggregate(pipeline).toArray();
  let ${targetObjName} = results[0]?.${targetObjName};

  return ${targetObjName} ? cleanUpResult(${targetObjName}) : null;
}